plugins {
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "3.0"
}

group = 'com.proof'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter:2.6.7'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.6.7'
	implementation 'com.google.code.gson:gson:2.9.0'
	implementation 'org.json:json:20220320'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.7'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.6.7'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'junit:junit:4.13.2'

	/* Lombok */
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'

}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.8"
	//reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		csv.required = false
		html.destination file("${buildDir}/jacoco/jacocoTest")
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, excludes: [
					"**/config/*", "**/general/**"
			])
		}))
	}
}